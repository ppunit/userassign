{"ast":null,"code":"var _jsxFileName = \"/home/puneet/Documents/assign/src/components/jwmodal/JwModal.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './jw-modal.scss';\nconst propTypes = {\n  id: PropTypes.string.isRequired\n};\n\nclass JwModal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOpen: false\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  componentDidMount() {\n    // move element to bottom of page (just before </body>) so it can be displayed above everything else\n    document.body.appendChild(this.element); // add this modal instance to the modal service so it's accessible from other components\n\n    JwModal.modals.push(this);\n  }\n\n  componentWillUnmount() {\n    // remove this modal instance from modal service\n    JwModal.modals = JwModal.modals.filter(x => x.props.id !== this.props.id);\n    this.element.remove();\n  }\n\n  handleClick(e) {\n    // close modal on background click\n    if (e.target.className === 'jw-modal') {\n      JwModal.close(this.props.id)(e);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: +this.state.isOpen ? '' : 'none'\n      },\n      onClick: this.handleClick,\n      ref: el => this.element = el,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"jw-modal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"jw-modal-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }\n    }, this.props.children)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"jw-modal-background\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nJwModal.modals = [];\n\nJwModal.open = id => e => {\n  e.preventDefault();\n  console.log(id); // open modal specified by id\n\n  let modal = JwModal.modals.find(x => x.props.id === id);\n  modal.setState({\n    isOpen: true\n  });\n  document.body.classList.add('jw-modal-open');\n};\n\nJwModal.close = id => e => {\n  e.preventDefault(); // close modal specified by id\n\n  let modal = JwModal.modals.find(x => x.props.id === id);\n  modal.setState({\n    isOpen: false\n  });\n  document.body.classList.remove('jw-modal-open');\n};\n\nJwModal.propTypes = propTypes;\nexport { JwModal };","map":{"version":3,"sources":["/home/puneet/Documents/assign/src/components/jwmodal/JwModal.jsx"],"names":["React","PropTypes","propTypes","id","string","isRequired","JwModal","Component","constructor","props","state","isOpen","handleClick","bind","componentDidMount","document","body","appendChild","element","modals","push","componentWillUnmount","filter","x","remove","e","target","className","close","render","display","el","children","open","preventDefault","console","log","modal","find","setState","classList","add"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './jw-modal.scss';\n\nconst propTypes = {\n    id: PropTypes.string.isRequired\n};\n\nclass JwModal extends React.Component {\n    static modals = [];\n\n    static open = (id) => (e) => {\n        e.preventDefault();\n        console.log(id)\n        // open modal specified by id\n        let modal = JwModal.modals.find(x => x.props.id === id);\n        modal.setState({ isOpen: true });\n        document.body.classList.add('jw-modal-open');\n    }\n\n    static close = (id) => (e) => {\n        e.preventDefault();\n\n        // close modal specified by id\n        let modal = JwModal.modals.find(x => x.props.id === id);\n        modal.setState({ isOpen: false });\n        document.body.classList.remove('jw-modal-open');\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = { isOpen: false };\n\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    componentDidMount() {\n        // move element to bottom of page (just before </body>) so it can be displayed above everything else\n        document.body.appendChild(this.element);\n\n        // add this modal instance to the modal service so it's accessible from other components\n        JwModal.modals.push(this);\n    }\n\n    componentWillUnmount() {\n        // remove this modal instance from modal service\n        JwModal.modals = JwModal.modals.filter(x => x.props.id !== this.props.id);\n        this.element.remove();\n    }\n\n    handleClick(e) {\n        // close modal on background click\n        if (e.target.className === 'jw-modal') {\n            JwModal.close(this.props.id)(e);\n        }\n    }\n    \n    render() {\n        return (\n            <div style={{display: + this.state.isOpen ? '' : 'none'}} onClick={this.handleClick} ref={el => this.element = el}>\n                <div className=\"jw-modal\">\n                    <div className=\"jw-modal-body\">\n                        {this.props.children}\n                    </div>\n                </div>\n                <div className=\"jw-modal-background\"></div>\n            </div>\n        );\n    }\n}\n\nJwModal.propTypes = propTypes;\n\nexport { JwModal };"]},"metadata":{},"sourceType":"module"}