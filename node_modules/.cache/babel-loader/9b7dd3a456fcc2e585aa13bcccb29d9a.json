{"ast":null,"code":"var _jsxFileName = \"/home/puneet/Documents/assign/src/components/dashboard/dashboard.js\";\nimport React from 'react';\nimport TestJSON from '../../TestJSON.json';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport { JwModal } from '../jwmodal';\nimport { Timeline, TimelineItem } from 'vertical-timeline-component-for-react';\nconst columns = [{\n  id: 'real_name',\n  label: 'Name',\n  Width: 100\n}, {\n  id: 'id',\n  label: 'Id',\n  Width: 100\n}, {\n  id: 'tz',\n  label: 'Location',\n  Width: 100\n}];\nconst useStyles = makeStyles({\n  root: {\n    width: '70%',\n    marginLeft: \"14%\"\n  },\n  container: {\n    maxHeight: 440\n  }\n});\nlet mlist = {\n  \"Jan\": \"01\",\n  \"Feb\": \"02\",\n  \"Mar\": \"03\",\n  \"Apr\": \"04\",\n  \"May\": \"05\",\n  \"Jun\": \"06\",\n  \"Jul\": \"07\",\n  \"Aug\": \"08\",\n  \"Sep\": \"09\",\n  \"Oct\": \"10\",\n  \"Nov\": \"11\",\n  \"Dec\": \"12\"\n};\nexport default function DashBoard(props) {\n  const classes = useStyles();\n  const rows = TestJSON.members;\n  const [userActiveDetails, setuserActiveDetails] = React.useState({});\n  const [selectedDateDetails, setselectedDateDetails] = React.useState({});\n  const [selectedDate, setSelectedDate] = React.useState(\"\");\n  const [activityPerDate, setActivityPerDate] = React.useState(false);\n  let finalObject = {};\n\n  const openModal = (event, value) => {\n    setActivityPerDate(false);\n    setSelectedDate(\"\");\n    let activePeriod = value.activity_periods;\n\n    for (var x of activePeriod) {\n      let date = x.start_time;\n      date = date.split(\" \");\n      let month = mlist[date[0]];\n      let day = \"\";\n      if (date[1] < 10) day = '0' + date[1];else day = date[1];\n      let year = date[2];\n      let finalDate = year + '-' + month + \"-\" + day;\n      finalObject[finalDate] = x;\n    }\n\n    setuserActiveDetails(finalObject);\n    JwModal.open('save')(event);\n  };\n\n  const handleDateChange = e => {\n    setActivityPerDate(true);\n    setSelectedDate(e.target.value);\n    let obj = {};\n    if (e.target.value in userActiveDetails) obj[e.target.value] = userActiveDetails[e.target.value];else obj[e.target.value] = {\n      \"start_time\": \"No Major Actions\",\n      \"end_time\": \"\"\n    };\n    setselectedDateDetails(obj);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"segment-table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TableContainer, {\n    className: classes.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    stickyHeader: true,\n    \"aria-label\": \"sticky table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 29\n    }\n  }, columns.map(column => /*#__PURE__*/React.createElement(TableCell, {\n    key: column.id,\n    align: column.align,\n    style: {\n      fontSize: \"17px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 41\n    }\n  }, column.label))))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 25\n    }\n  }, rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => {\n    return /*#__PURE__*/React.createElement(TableRow, {\n      hover: true,\n      role: \"checkbox\",\n      tabIndex: -1,\n      key: row.id // onClick={(e) => setPrefillData(row.segmentPrefill, row.id, row.name,row.templateFields)}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 37\n      }\n    }, columns.map(column => {\n      const value = row[column.id];\n      return /*#__PURE__*/React.createElement(TableCell, {\n        key: column.id,\n        align: column.align,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        onClick: e => openModal(e, row),\n        style: {\n          width: \"70%\",\n          height: \"100%\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 53\n        }\n      }, column.format && typeof value === 'number' ? column.format(value) : value));\n    }));\n  }))))), /*#__PURE__*/React.createElement(JwModal, {\n    id: \"save\",\n    className: \"dialog\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"heading\",\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 17\n    }\n  }, \"User Activity Details\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"date-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    style: {\n      marginRight: \"2%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 21\n    }\n  }, \"Select Date\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"date\",\n    onChange: handleDateChange,\n    value: selectedDate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Timeline, {\n    lineColor: '#ddd',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 17\n    }\n  }, Object.keys(!activityPerDate ? userActiveDetails : selectedDateDetails).map((instance, index) => {\n    return /*#__PURE__*/React.createElement(TimelineItem, {\n      key: index,\n      dateText: instance,\n      style: {\n        color: '#fb8c00'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 32\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 29\n      }\n    }, \"Actions\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 29\n      }\n    }, !activityPerDate ? userActiveDetails[instance].start_time : selectedDateDetails[instance].start_time), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 29\n      }\n    }, !activityPerDate ? userActiveDetails[instance].end_time : selectedDateDetails[instance].end_time));\n  })), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 17\n    }\n  })));\n}","map":{"version":3,"sources":["/home/puneet/Documents/assign/src/components/dashboard/dashboard.js"],"names":["React","TestJSON","makeStyles","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","JwModal","Timeline","TimelineItem","columns","id","label","Width","useStyles","root","width","marginLeft","container","maxHeight","mlist","DashBoard","props","classes","rows","members","userActiveDetails","setuserActiveDetails","useState","selectedDateDetails","setselectedDateDetails","selectedDate","setSelectedDate","activityPerDate","setActivityPerDate","finalObject","openModal","event","value","activePeriod","activity_periods","x","date","start_time","split","month","day","year","finalDate","open","handleDateChange","e","target","obj","map","column","align","fontSize","slice","page","rowsPerPage","row","height","format","textAlign","marginRight","Object","keys","instance","index","color","end_time"],"mappings":"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","sourcesContent":["import React from 'react'\nimport TestJSON from '../../TestJSON.json'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport { JwModal } from '../jwmodal';\nimport { Timeline, TimelineItem } from 'vertical-timeline-component-for-react';\n\n\nconst columns = [\n    { id: 'real_name', label: 'Name', Width: 100 },\n    { id: 'id', label: 'Id', Width: 100 },\n    { id: 'tz', label: 'Location', Width: 100 },\n\n];\n\nconst useStyles = makeStyles({\n    root: {\n        width: '70%',\n        marginLeft: \"14%\"\n    },\n    container: {\n        maxHeight: 440,\n    },\n});\n\nlet mlist = {\n    \"Jan\": \"01\", \"Feb\": \"02\", \"Mar\": \"03\", \"Apr\": \"04\", \"May\": \"05\", \"Jun\": \"06\",\n    \"Jul\": \"07\", \"Aug\": \"08\", \"Sep\": \"09\", \"Oct\": \"10\", \"Nov\": \"11\", \"Dec\": \"12\"\n};\n\nexport default function DashBoard(props) {\n    const classes = useStyles();\n    const rows = TestJSON.members;\n    const [userActiveDetails, setuserActiveDetails] = React.useState({});\n    const [selectedDateDetails, setselectedDateDetails] = React.useState({});\n   \n    const [selectedDate, setSelectedDate] = React.useState(\"\");\n    const [activityPerDate, setActivityPerDate] = React.useState(false)\n    \n    let finalObject = {}\n   \n\n    const openModal = (event, value) => {\n        setActivityPerDate(false)\n        setSelectedDate(\"\")\n        let activePeriod = value.activity_periods\n        for (var x of activePeriod) {\n            let date = x.start_time\n            date = date.split(\" \")\n            let month = mlist[date[0]]\n            let day = \"\"\n            if (date[1] < 10)\n                day = '0' + date[1]\n            else\n                day = date[1]\n            let year = date[2]\n            let finalDate = year + '-' + month + \"-\" + day\n            finalObject[finalDate] = x\n        }\n        setuserActiveDetails(finalObject)\n        JwModal.open('save')(event)\n    }\n    const handleDateChange = (e) => {\n        setActivityPerDate(true)\n        setSelectedDate(e.target.value)\n        let obj = {}\n        if (e.target.value in userActiveDetails)\n            obj[e.target.value] = userActiveDetails[e.target.value]\n        else\n            obj[e.target.value] = { \"start_time\": \"No Major Actions\", \"end_time\": \"\" }\n        setselectedDateDetails(obj)\n\n    }\n\n\n    return (\n        <div className=\"segment-table\">\n            <Paper className={classes.root}>\n                <TableContainer className={classes.container}>\n                    <Table stickyHeader aria-label=\"sticky table\">\n                        <TableHead>\n                            <TableRow>\n                                {columns.map(column => (\n                                    <TableCell\n                                        key={column.id}\n                                        align={column.align}\n                                        style={{ fontSize: \"17px\" }}\n                                    >\n                                        <b>{column.label}</b>\n                                    </TableCell>\n                                ))}\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => {\n\n                                return (\n                                    <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.id}\n                                    // onClick={(e) => setPrefillData(row.segmentPrefill, row.id, row.name,row.templateFields)}\n                                    >\n                                        {columns.map(column => {\n                                            const value = row[column.id];\n\n                                            return (\n                                                <TableCell key={column.id} align={column.align}>\n\n                                                    <span onClick={(e) => openModal(e, row)} style={{ width: \"70%\", height: \"100%\" }}>{column.format && typeof value === 'number' ? column.format(value) : value}\n                                                    </span>\n                                                </TableCell>\n                                            );\n                                        })}\n                                    </TableRow>\n                                );\n                            })}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n              \n            </Paper>\n\n            <JwModal id=\"save\" className=\"dialog\">\n                <h4 className=\"heading\" style={{ textAlign: \"center\" }}>User Activity Details</h4>\n\n                <span className=\"date-container\">\n                    <label style={{ marginRight: \"2%\" }}>Select Date</label>\n                    <input type=\"date\" onChange={handleDateChange} value={selectedDate} />\n                </span>\n\n\n                <Timeline lineColor={'#ddd'}>\n                    {Object.keys(!activityPerDate ? userActiveDetails :selectedDateDetails).map((instance, index) => {\n                        return <TimelineItem\n                            key={index}\n                            dateText={instance}\n                            style={{ color: '#fb8c00' }}\n                        >\n                            <h6>Actions</h6>\n                            <p>{!activityPerDate ? userActiveDetails[instance].start_time : selectedDateDetails[instance].start_time}</p>\n                            <p>{!activityPerDate ? userActiveDetails[instance].end_time : selectedDateDetails[instance].end_time}</p>\n                        </TimelineItem>\n                    })}\n\n                </Timeline>\n                <br></br>\n            </JwModal>\n        </div>\n    )\n}\n\n"]},"metadata":{},"sourceType":"module"}